#!/usr/bin/python3
#+
# Example use of python_fontconfig: find fonts with family names
# containing the specified string. Invoke this script as
#
#     name_like «substring»
#
# It will output matching fonts, one to a line, showing the family
# name and style, and the pathname to the font file.
#
# Copyright 2020 by Lawrence D'Oliveiro <ldo@geek-central.gen.nz>. This
# script is licensed CC0
# <https://creativecommons.org/publicdomain/zero/1.0/>; do with it
# what you will.
#-

import sys
import getopt
import fontconfig as fc
from fontconfig import \
    FC

opts, args = getopt.getopt \
  (
    sys.argv[1:],
    "",
   []
  )
if len(args) != 1 :
    raise getopt.GetoptError("usage: %s «name»" % sys.argv[0])
#end if
substr = args[0]
pat = fc.Pattern.create \
  (
    vals =
        (
            (fc.PROP.FAMILY, substr),
        )
  )
conf = fc.Config.get_current()
conf.substitute(pat, FC.MatchPattern)
pat.default_substitute()
found = conf.font_sort(pat, trim = False, want_coverage = False)[0]
count = 0
for f in found :
    family = f.get(fc.PROP.FAMILY, 0)[0]
    if substr.lower() in family.lower() :
        count += 1
        sys.stdout.write \
          (
                "%s %s: %s\n"
            %
                (
                    family,
                    f.get(fc.PROP.STYLE, 0)[0],
                    f.get(fc.PROP.FILE, 0)[0],
                )
          )
    #end if
#end for
sys.stdout.write("Found: %d\n" % count)
